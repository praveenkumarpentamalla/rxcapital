name: Django DevSecOps CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-test-scan:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: django
          POSTGRES_PASSWORD: django
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U django -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Checkout repo
      - uses: actions/checkout@v3

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Run Django tests
      - name: Run Django tests
        env:
          DATABASE_URL: postgres://django:django@localhost:5432/testdb
        run: |
          python manage.py migrate --noinput
          python manage.py test

      # ---- Security Scans ----
      # SonarCloud (SAST + Code quality)
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Snyk (SCA - dependency scan for Python)
      - name: Snyk Security Scan
        uses: snyk/actions/python@master
        with:
          args: test --file=requirements.txt --package-manager=pip
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      # Trivy (Container scan)
      - name: Build Docker image
        run: docker build -t rxcapital:latest .

      - name: Run Trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: rxcapital:latest
          format: table
          exit-code: 0
          severity: HIGH,CRITICAL

      # OWASP ZAP (DAST - baseline scan)
      - name: Run OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:8035'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
